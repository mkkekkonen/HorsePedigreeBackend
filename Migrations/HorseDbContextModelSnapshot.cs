// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using horsesBackend.Db;

namespace horsesBackend.Migrations
{
    [DbContext(typeof(HorseDbContext))]
    partial class HorseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("horsesBackend.Models.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameEn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("horsesBackend.Models.Horse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int?>("DamId")
                        .HasColumnType("int");

                    b.Property<string>("DamName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HeightCm")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SireId")
                        .HasColumnType("int");

                    b.Property<string>("SireName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("DamId");

                    b.HasIndex("SireId");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("horsesBackend.Models.Horse", b =>
                {
                    b.HasOne("horsesBackend.Models.Breed", "Breed")
                        .WithMany("Horses")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("horsesBackend.Models.Horse", "Dam")
                        .WithMany()
                        .HasForeignKey("DamId");

                    b.HasOne("horsesBackend.Models.Horse", "Sire")
                        .WithMany()
                        .HasForeignKey("SireId");

                    b.Navigation("Breed");

                    b.Navigation("Dam");

                    b.Navigation("Sire");
                });

            modelBuilder.Entity("horsesBackend.Models.Breed", b =>
                {
                    b.Navigation("Horses");
                });
#pragma warning restore 612, 618
        }
    }
}
